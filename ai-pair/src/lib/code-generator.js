const { parseAndApplyGeneratedCode } = require('./code-parser');
const { logger } = require('./logger');

class CodeGenerator {
  constructor(client) {
    this.client = client;
  }

  /**
   * Generates code using the AI client.
   * @param {string} prompt - The prompt to send to the AI client.
   * @param {Object} config - The configuration object.
   * @returns {Promise<string>} - The generated code from the AI client.
   */
  async generateCode(prompt, config) {
    try {
      const generatedCode = await this.client.generateCode(
        prompt,
        config.tmpDir,
        config.systemPrompt
      );
      return generatedCode;
    } catch (error) {
      logger.error('Error during code generation:', error);
      throw error;
    }
  }

  /**
   * Parses and applies the generated code to the project.
   * @param {string} generatedCode - The code generated by the AI.
   * @param {Object} config - The configuration object.
   * @param {Object} runningState - The running state to update with code changes.
   * @returns {Object} - Details about the changes made.
   */
  applyGeneratedCode(generatedCode, config, runningState) {
    try {
      const changes = parseAndApplyGeneratedCode(
        config,
        generatedCode,
        runningState
      );
      logger.info('Generated code applied successfully.');
      return changes;
    } catch (error) {
      logger.error('Error applying generated code:', error);
      throw error;
    }
  }

  // Other related methods...
}

module.exports = CodeGenerator; 